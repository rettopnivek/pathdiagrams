% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S01-pd_functions.R
\name{pd_node}
\alias{pd_node}
\title{Add Node to List}
\usage{
pd_node(
  lst,
  node,
  xy = NULL,
  wh = NULL,
  string = "",
  shape = "rectangle",
  from = NULL,
  to = NULL,
  args.polygon = NULL,
  args.text = NULL,
  args.arrows = NULL,
  ignore_asterisk = TRUE
)
}
\arguments{
\item{lst}{A list.}

\item{node}{A character string, the name of the
node (note that the period symbol should not be used
when naming nodes).}

\item{xy}{A named numeric vector where \code{xy['x']}
specifies the x-axis value and \code{xy['y']} specifies
the y-axis value for the center of the node. Values
should range from 0 to 1 (the fraction of the plotting
window). If left as \code{NULL}, users can use the
argument \code{from} to specify the node position instead.}

\item{wh}{A named numeric vector where \code{wh['w']}
specifies the width and \code{wh['h']} specifies
the height of the node. Values should range from 0
to 1 (the fraction of the plotting window). Setting
values to \code{NA} will result in the function
inferring the relevant dimension size from the
node's text content.}

\item{string}{A character string, the text content
for the node. Text can be bracketed by one or
two asterisks to produce italics or bold text,
respectively. Set \code{ignore_asterisk} to
\code{FALSE} to suppress this behavior.}

\item{shape}{A character string, either \code{'rectangle'}
or \code{'ellipse'}, indicating the shape of the node
to draw.}

\item{from}{An optional named vector of two values, giving
the offset from a specified node for the x and y-axis.
Units are relative, based on the size of the referent
node (e.g., a value of -2 for the y-axis will place the
new node below at twice the height of the referent
node). Names for the vector are the referent node,
followed by a period, followed by the location
on the referent node to use as reference (e.g.,
'N01.bottom').}

\item{to}{A character vector, where each string
indicates the arrows from the current node
and where they should connect to. Format is
\code{'<location> - <node>.<location>'} where
location is either top, topright, right, bottomright,
bottom, bottomleft, left, or topleft, and node is the
node name to connect to. Users can indicate the
type of arrow to draw using \code{'-'} (line),
\code{'->'} (arrow to new node), \code{'<-'}
(arrow to old node), \code{'<->'} (arrows on
both ends).}

\item{args.polygon}{A named list with additional
arguments to pass to the [graphics::polygon]
function.}

\item{args.text}{A named list with additional
arguments governing text (\code{cex} for text
size, \code{col} for color, and \code{spacing}
for gap between text).}

\item{ignore_asterisk}{A logical value, if
\code{FALSE} suppresses behavior determining
italic/bold text via asterisks.}

\item{args.arrow}{A named list with additional
arguments to pass to the [graphics::arrows]
function.}
}
\value{
A list with a new element named \code{node}.
}
\description{
Adds specifications to draw a new node to
an existing list that can then be passed to
the [pathdiagrams::pd_draw_nodes] function.
}
\examples{
pd_base_figure( default = '5 x 5' )

lst_inputs <- list() |>
  pd_node( 'N01', c(x = .5, y = .8), string = 'Node-1' ) |>
  pd_node( 'N02', string = 'Node-2',
           from = c( N01.center = 0, N01.bottom = -1.5 ),
           to = 'top - N01.bottom' )
pd_draw_nodes( lst_inputs )

}
